name: CSI Driver

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build-bin:
    name: "Build binary"
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20
      - name: Build binary
        run: make build-cross
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bin
          path: bin
        if: always()

  build-image:
    name: "Build image"
    runs-on: ubuntu-latest
    env:
      REGISTRY_IMAGE_PATH: registry.cern.ch/kubernetes/cvmfs-csi:${{ github.event_name == 'tag' && github.ref || github.sha }}
      COSIGN_PRIVATE_KEY: ${{ secrets.HARBOR_SIGNKEY }}
      DOCKER_FILE_NAME: deployments/docker/Dockerfile
      PLATFORMS: linux/amd64,linux/arm64
      BUILD_ARGS: RELEASE=${{ github.event_name == 'tag' && github.ref || github.sha }} GITREF=${{ github.sha }} CREATED=${{ github.event.created_at }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ env.DOCKER_FILE_NAME }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name == 'tag' }}
          tags: ${{ env.REGISTRY_IMAGE_PATH }}
          build-args: ${{ env.BUILD_ARGS }}

  build-image:
    name: "Build image"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v1.11.0'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: "."
          file: "deployments/docker/Dockerfile"
          push: ${{ github.event_name != 'pull_request' }} 
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-chart:
    name: "Build chart"
    runs-on: ubuntu-latest
    env:
      REGISTRY_CHART_PATH: registry.cern.ch/kubernetes/charts
      COSIGN_PRIVATE_KEY: ${{ secrets.HARBOR_SIGNKEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy Helm chart
        uses: helm/github-action@v2
        with:
          chart-ref: ${{ github.sha }}
          chart-path: .
          registry: ${{ env.REGISTRY_CHART_PATH }}
          push-chart: ${{ github.event_name == 'tag' }}
