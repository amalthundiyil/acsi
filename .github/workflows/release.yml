name: Release

on:
  push:
    branches: [devel,master]
    tags: '*'
  pull_request:
    branches: [devel,master]

jobs:
  build-bin:
    name: Build binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Set up Go
        uses: actions/setup-go@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          go-version: '1.20'

      - name: Build binary
        run: |
          cd cvmfs-csi
          make build-cross

      - name: Archive binaries
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: bin
          path: cvmfs-csi/bin

  build-image:
    name: Build image
    needs: build-bin
    runs-on: ubuntu-latest
    env:
      REGISTRY: registry.cern.ch 

    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Login to Registry
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME  }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Download binaries
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4
        with:
          name: bin
          path: cvmfs-csi/bin

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3

      - name: Extract metadata
        id: docker_meta
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e # v4.4.0
        with:
          images: cvmfs-csi/cvmfs-csi
          tags: ${{ github.ref_name || github.sha }}

      - name: Build and push container images
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2
        id: build-and-push
        with:
          context: cvmfs-csi
          file:  cvmfs-csi/deployments/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: '${{ env.REGISTRY }}/${{ steps.docker_meta.outputs.tags }}'
          build-args: RELEASE=${{ github.ref_name || github.sha }} GITREF=${{ github.sha }} CREATED=${{ github.event.created_at }}

      - name: Sign image
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${{ env.REGISTRY }}/${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      - name: Scan image
        if: startsWith(github.ref, 'refs/tags/v')
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # v0.19.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ steps.docker_meta.outputs.tags }}

  build-chart:
    name: Build chart
    runs-on: ubuntu-latest
    env:
      REGISTRY: registry.cern.ch
      REGISTRY_CHART_PATH: registry.cern.ch/cvmfs-csi/charts
    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3

      - name: Login to Registry
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME  }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: docker_meta
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e # v4.4.0
        with:
          images: cvmfs-csi/charts/cvmfs-csi
          tags: ${{ github.ref_name || github.sha }}

      - name: Push chart
        id: push_chart
        uses: bsord/helm-push650e04843d399b727368d37022b576c6a6ff3291 # v4.2.0
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          useOCIRegistry: true
          registry-url: 'oci://${{ env.REGISTRY_CHART_PATH }}'
          username: ${{ secrets.REGISTRY_USERNAME }}
          access-token: ${{ secrets.REGISTRY_PASSWORD }} 
          force: true
          chart-folder: cvmfs-csi/deployments/helm/cvmfs-csi

      - name: Sign chart
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${{ env.REGISTRY }}/${tag} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Scan chart
        if: startsWith(github.ref, 'refs/tags/v')
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # v0.19.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ steps.docker_meta.outputs.tags }}
